# -*- coding: utf-8 -*-
"""mlt_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W5wqT6OD3huw7Azr4_V9EQ47cASMaVm1

# Project 1 Machine Learning Terapan - Predictive Analysis: Forecasting and Comparing Maize, Rice, Green Coffee, Cocoa Beans and Palm Oil Production in ASEAN Using LSTM

- **Nama:** Fadhilah Nurrahmayanti
- **Email:** a117xbm150@devacademy.id
- **ID Dicoding:** dilaafn

## Project Domain

Produksi pangan merupakan sektor vital bagi negara-negara ASEAN, mengingat sebagian besar wilayahnya masih mengandalkan pertanian sebagai sumber utama pangan dan pendapatan. Dengan meningkatnya populasi dan perubahan iklim yang tidak menentu, memprediksi produksi pangan menjadi kebutuhan strategis. Data historis produksi komoditas seperti jagung, beras, kopi, coklat, dan minyak sawit dapat dimanfaatkan untuk membuat prediksi produksi di masa depan.

Meskipun sangat penting, tren produksi di negara-negara ini sering kali sangat fluktuatif, dipengaruhi oleh variabilitas musiman dan dinamika global. Hal ini menyulitkan dalam memproyeksikan tingkat pasokan di masa depan secara akurat, yang pada akhirnya menjadi tantangan dalam ketahanan pangan, strategi perdagangan, dan perencanaan kebijakan jangka panjang.

Dengan tersedianya data melalui [World Food Production Dataset (Kaggle)](https://www.kaggle.com/datasets/rafsunahmad/world-food-production/data), memungkinkan penggunaan **Data-driven Forecasting Models** seperti neural network **Long Short-Term Memory (LSTM)** untuk memproyeksikan tren produksi hingga tahun 2030 dan membandingkan hasil per negara dari waktu ke waktu.

**Mengapa Masalah Ini Perlu diselesaikan**

1. **Perencanaan Pertanian Jangka Panjang**
   Pemerintah dan perencana pertanian membutuhkan prediksi yang andal untuk menyusun strategi ketahanan pangan dan mengoptimalkan infrastruktur produksi.

2. **Tolok Ukur Strategis Antar Negara ASEAN**
   Peramalan produksi masa depan membantu menentukan apakah Indonesia tetap dominan dalam produksi beras.

3. **Analisis Tren Produksi Global**
   Model LSTM univariat memungkinkan analisis tren setiap komoditas secara independen, memberikan wawasan terhadap stagnasi pertumbuhan atau potensi peningkatan hasil.

**Bagaimana Masalah Ini Akan Diselesaikan**

Solusi dilakukan dengan membangun **model LSTM univariat** yang hanya menggunakan **jumlah produksi tahunan** sebagai input, tanpa variabel lingkungan atau ekonomi tambahan. Pendekatan ini murni berbasis data historis dari [World Food Production Dataset (Kaggle)](https://www.kaggle.com/datasets/rafsunahmad/world-food-production/data)

**Langkah Implementasi:**

1. **Pra-pemrosesan data deret waktu** (1961–2021) untuk tiap komoditas (jagung, beras, kopi, coklat, dan minyak sawit) dan negara (Indonesia, Vietnam, Thailand, Filipina dan Malaysia).
2. **Melatih model LSTM terpisah** untuk tiap komoditas dan negara.
3. **Memprediksi produksi tahun 2022–2030.**
4. **Visualisasi dan perbandingan** proyeksi antar negara dan komoditas.

## Business Understanding

### Problem Statements

**Masalah 1:**

Tren produksi pertanian di negara-negara ASEAN sangat fluktuatif. Tanpa peramalan yang akurat, pemerintah dan pemangku kepentingan kesulitan menyusun strategi pangan dan perdagangan jangka panjang.

**Masalah 2:**

Kurangnya prediksi standar yang membandingkan posisi Indonesia terhadap negara produsen utama ASEAN lainnya (Vietnam, Thailand, Filipina dan Malaysia) untuk komoditas strategis seperti jagung, beras, kopi, coklat, dan minyak sawit.

**Masalah 3:**

Teknik peramalan tradisional (misalnya statistik dasar atau regresi linier) sering gagal menangkap pola musiman dan non-linier jangka panjang dalam data deret waktu pertanian.

### Goals

**Tujuan 1 (untuk Masalah 1):**

Membangun model **LSTM univariat** yang akurat untuk memprediksi produksi tahunan jagung, beras, kopi, coklat, dan minyak sawit dari 2022 hingga 2030 menggunakan data historis (1961–2021) per negara dan komoditas.

**Tujuan 2 (untuk Masalah 2):**

Membandingkan hasil prediksi antar Indonesia, Vietnam, Thailand, Filipina dan Malaysia untuk setiap komoditas guna mengevaluasi posisi kompetitif Indonesia secara kuantitatif.

**Tujuan 3 (untuk Masalah 3):**

Menggunakan LSTM untuk memodelkan pola musiman dan non-linear dalam data produksi historis, sehingga meningkatkan akurasi dibandingkan model konvensional seperti rata-rata bergerak atau regresi linier.

### Solution Statements

* Menggunakan **Long Short-Term Memory (LSTM)** karena kemampuannya dalam mempelajari pola jangka panjang pada data time series.
* Menyusun preprocessing data berupa encoding, scaling, dan reshaping sebelum digunakan oleh model LSTM.
* Melakukan **early stopping** untuk menghindari overfitting, serta membandingkan hasil prediksi aktual dan prediksi model menggunakan **RMSE** sebagai indikator akurasi.

## Data Understanding

Dataset yang digunakan berisi data produksi komoditas pangan dari berbagai negara ASEAN. File data bernama Data.csv, dan berisi 11.912 baris dengan 24 kolom.
Langkah ini sebagai tahap awal sebelum melakukan analisis atau pemodelan, karena seluruh proses selanjutnya akan bergantung pada data yang telah dimuat.

### Importing Required Libraries

Memuat semua pustaka yang diperlukan dalam analisis data dan pengembangan model. Library seperti pandas dan numpy digunakan untuk manipulasi data, matplotlib dan seaborn untuk visualisasi, sklearn untuk preprocessing dan evaluasi model, serta TensorFlow dan Keras untuk membangun serta melatih model neural network.
"""

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
import seaborn as sns

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, LSTM
from tensorflow.keras.callbacks import EarlyStopping

from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error

"""**Insight:**

* Semua library utama telah diimpor untuk mendukung proses analisis dan modeling secara menyeluruh
* Kehadiran MinMaxScaler mengindikasikan adanya tahap normalisasi data
* Penggunaan LSTM menunjukkan pemodelan berbasis data deret waktu atau sekuensial
* EarlyStopping disiapkan untuk mencegah overfitting selama pelatihan model

### Dataset Source and Overview

Membaca dan Menampilkan Dataset yang akan digunakan
"""

df = pd.read_csv('Data.csv')
df.head()

"""**Insight:**

* Dataset berhasil dimuat dengan total 11912 baris dan 24 kolom
* Data berisi informasi produksi berbagai komoditas pertanian dari tahun ke tahun di berbagai negara
* Format data tabular memudahkan proses eksplorasi, visualisasi, dan preprocessing
* Tidak terdapat error saat pemanggilan file yang menunjukkan path file dan formatnya valid
* Struktur data awal masih mengandung beberapa spasi dan format kolom yang tidak seragam sehingga memerlukan tahap preprocessing lanjutan
* Karena data mencakup banyak komoditas dari banyak negara maka perlu dilakukan filtering untuk fokus pada negara ASEAN dan lima komoditas utama
"""

df.info()

"""**Insight:**

* Dataset terdiri dari 11912 baris dan 24 kolom
* Terdapat 22 variabel numerik bertipe float64, 1 variabel bertipe integer (Year), dan 1 variabel bertipe objek (Entity)
* Tidak terdapat nilai null di seluruh kolom, yang berarti data bersih dalam hal kelengkapan
* Sebagian besar variabel adalah hasil produksi komoditas pertanian dengan satuan ton
* Struktur data siap untuk dilakukan eksplorasi lebih lanjut dan preprocessing

### Variable Descriptions

Proses ini bertujuan untuk menampilkan informasi umum mengenai struktur dataset, termasuk jumlah baris dan kolom, dan menampilkan isi dari kolom. Ini merupakan langkah awal dalam Exploratory Data Analysis (EDA) untuk memahami bentuk dan karakteristik data yang akan dianalisis.
"""

print(f"Dataset contains {df.shape[0]} rows and {df.shape[1]} columns.")
print("\nAvailable columns:")
print(df.columns.tolist())

"""**Insight:**

* Dataset terdiri dari 11.912 baris dan 24 kolom
* Terdapat 1 kolom kategori (Entity), 1 kolom waktu (Year), dan 22 kolom numerik yang merepresentasikan jumlah produksi berbagai komoditas pertanian.
* Nama-nama kolom menunjukkan cakupan data yang luas, termasuk produk tanaman pangan, buah-buahan, hingga hasil perkebunan. Nama-nama kolom dalam dataset adalah sebagai berikut:
  * Entity
  * Year
  * Maize Production (tonnes)
  * Rice Production (tonnes)
  * Yams Production (tonnes)
  * Wheat Production (tonnes)
  * Tomatoes Production (tonnes)
  * Tea Production (tonnes)
  * Sweet potatoes Production (tonnes)
  * Sunflower seed Production (tonnes)
  * Sugar cane Production (tonnes)
  * Soybeans Production (tonnes)
  * Rye Production (tonnes)
  * Potatoes Production (tonnes)
  * Oranges Production (tonnes)
  * Peas, dry Production (tonnes)
  * Palm oil Production (tonnes)
  * Grapes Production (tonnes)
  * Coffee, green Production (tonnes)
  * Cocoa beans Production (tonnes)
  * Meat, chicken Production (tonnes)
  * Bananas Production (tonnes)
  * Avocados Production (tonnes)
  * Apples Production (tonnes)

### Missing Value and Duplicate Data Check

Memastikan kualitas data sebelum masuk ke tahap analisis atau pemodelan, karena nilai kosong maupun data duplikat dapat mengganggu hasil dan akurasi model.
"""

df.isnull().sum()

"""**Insight:**

* Seluruh kolom dalam dataset tidak memiliki nilai kosong
* Data dapat langsung digunakan tanpa perlu melakukan imputasi atau penghapusan entri
* Kualitas data dari sisi kelengkapan sangat baik
* Proses pembersihan data awal tidak diperlukan pada aspek missing values
"""

print('Total Duplikasi Data:', df.duplicated().sum())

"""**Insight:**

* Tidak terdapat data yang duplikat dalam dataset
* Dataset bersih dan siap untuk tahap preprocessing dan analisis lebih lanjut

### ASEAN Country and Commodity Selection

Memfokuskan analisis pada lima negara ASEAN, yaitu Indonesia, Vietnam, Thailand, Filipina, dan Malaysia, serta pada komoditas tertentu yang relevan secara ekonomi dan produksi, yaitu jagung, beras, kopi, kakao, dan minyak
 sawit.
"""

target_countries = ['Indonesia', 'Vietnam', 'Thailand', 'Philippines', 'Malaysia']

selected_columns = [
    'Entity', 'Year',
    'Maize Production (tonnes)',
    'Rice  Production ( tonnes)',
    'Coffee, green Production ( tonnes)',
    'Cocoa beans Production (tonnes)',
    'Palm oil  Production (tonnes)'
]

df_filtered = df[df['Entity'].isin(target_countries)][selected_columns].copy()
df_filtered

"""**Insight:**

* Dataset berhasil difilter menjadi 305 baris yang hanya mencakup negara dan komoditas target
* Komoditas yang dipilih memiliki nilai strategis tinggi di kawasan ASEAN, terutama dalam sektor pertanian dan ekspor
* Variabel produksi yang dipilih mewakili kategori tanaman pangan, minuman, dan industri
* Data kini lebih fokus dan manageable untuk dilakukan eksplorasi dan visualisasi mendalam

### Descriptive Statistical Analysis

Membandingkan karakteristik produksi komoditas antar negara ASEAN yang dianalisis.
"""

df_filtered.groupby('Entity').describe(include="all")

"""**Insight:**

* Setiap negara memiliki data lengkap selama 61 tahun dari 1961 hingga 2021
* Indonesia memiliki rata-rata produksi jagung dan sawit tertinggi di antara negara lain
* Vietnam mencatat angka produksi tertinggi untuk komoditas kopi dan kakao, menandakan dominasi dalam sektor perkebunan
* Malaysia menunjukkan nilai produksi kakao yang tinggi namun memiliki produksi sawit yang secara rata-rata lebih kecil dibanding Vietnam
* Thailand dan Filipina memiliki produksi jagung dan beras yang relatif stabil, namun volume produksi sawit lebih rendah dibanding Indonesia dan Vietnam
* Distribusi nilai pada beberapa komoditas (seperti palm oil dan cocoa beans) memperlihatkan standar deviasi yang tinggi, mengindikasikan variasi produksi yang besar antar tahun

### Feature Renaming for Simplicity

Membersihkan dan menyederhanakan nama kolom dengan menghapus satuan (tonnes) serta memperbaiki ketidakkonsistenan spasi dan format penamaan. Proses ini juga meningkatkan keterbacaan, menghindari error saat pemanggilan kolom, serta memudahkan dalam proses analisis dan visualisasi data selanjutnya.
"""

df_filtered.columns = df_filtered.columns.str.replace(' \(tonnes\)', '', regex=True)
df_filtered.columns = df_filtered.columns.str.replace(' \( tonnes\)', '', regex=True)
df_filtered.columns = df_filtered.columns.str.replace('Coffee, green Production', 'Coffee green Production', regex=True)
df_filtered.columns = df_filtered.columns.str.replace('Palm oil  Production', 'Palm oil Production', regex=True)
df_filtered.columns = df_filtered.columns.str.replace('Cocoa beans Production', 'Cocoa beans Production', regex=True)
df_filtered.columns = df_filtered.columns.str.replace('Rice  Production', 'Rice Production', regex=True)
df_filtered.columns = df_filtered.columns.str.replace('Maize Production', 'Maize Production', regex=True)
df_filtered.head()

"""**Insight:**

* Seluruh kolom produksi kini memiliki nama yang lebih ringkas dan konsisten
* Penghapusan satuan (tonnes) bertujuan agar nama kolom lebih mudah digunakan dalam pemanggilan kode dan visualisasi
* Kesalahan spasi ganda dan format tidak konsisten seperti pada "Rice  Production" dan "Palm oil  Production" telah dibersihkan
* Penyesuaian nama seperti “Coffee green Production” memudahkan identifikasi saat pengolahan data lebih lanjut

### Exploratory Data Analysis (EDA)

#### Yearly Trend of Maize Production (1961–2021)

Visualisasi ini menunjukkan tren produksi jagung dari tahun 1961 hingga 2021 di lima negara ASEAN terpilih. Jagung merupakan salah satu komoditas utama pangan dan pakan, sehingga pemantauan pertumbuhannya penting untuk mendukung ketahanan pangan.
"""

sns.set(style="whitegrid")
plt.figure(figsize=(12, 6))

maize_trend = df_filtered.groupby('Year')['Maize Production'].sum()
plt.plot(maize_trend.index, maize_trend.values, color='green')

plt.title('Yearly Trend of Maize Production (1961–2021)')
plt.xlabel('Year')
plt.ylabel('Maize Production (tonnes)')
plt.grid(True)
plt.tight_layout()
plt.show()

"""**Insight:**

* Produksi jagung menunjukkan pertumbuhan stabil dari tahun ke tahun dengan tren kenaikan yang cukup konsisten.
* Lonjakan signifikan mulai terlihat sejak tahun 2000-an, menunjukkan peningkatan perhatian terhadap komoditas ini.
* Terjadi sedikit penurunan di tahun-tahun terakhir, yang bisa menjadi sinyal untuk evaluasi faktor produksi atau cuaca.

#### Yearly Trend of Rice Production (1961–2021)

Visualisasi ini merepresentasikan tren tahunan produksi beras di kawasan ASEAN. Beras menjadi makanan pokok bagi mayoritas penduduk Asia Tenggara, menjadikannya komoditas strategis untuk dipantau secara jangka panjang.
"""

plt.figure(figsize=(12, 6))

rice_trend = df_filtered.groupby('Year')['Rice Production'].sum()
plt.plot(rice_trend.index, rice_trend.values, color='orange')

plt.title('Yearly Trend of Rice Production (1961–2021)')
plt.xlabel('Year')
plt.ylabel('Rice Production (tonnes)')
plt.grid(True)
plt.tight_layout()
plt.show()

"""**Insight:**

* Produksi padi cenderung fluktuatif tetapi menunjukkan tren kenaikan jangka panjang yang kuat.
* Terdapat penurunan tajam sekitar tahun 1967 dan beberapa fluktuasi tajam di era 1990–2000, mengindikasikan pengaruh faktor eksternal seperti kebijakan atau cuaca ekstrem.
* Dalam dekade terakhir, tren terlihat meningkat kembali dengan volume produksi mencapai puncaknya pada tahun 2021.

#### Yearly Trend of Coffee Production (1961–2021)

Visualisasi ini menggambarkan dinamika produksi kopi tahunan yang sangat fluktuatif, dipengaruhi oleh faktor cuaca, harga global, dan kebijakan ekspor.
"""

plt.figure(figsize=(12, 6))

coffee_trend = df_filtered.groupby('Year')['Coffee green Production'].sum()
plt.plot(coffee_trend.index, coffee_trend.values, color='brown')

plt.title('Yearly Trend of Coffee Production (1961–2021)')
plt.xlabel('Year')
plt.ylabel('Coffee Production (tonnes)')
plt.grid(True)
plt.tight_layout()
plt.show()

"""**Insight:**

* Produksi kopi sangat volatil, terutama sebelum tahun 2000, menunjukkan ketergantungan tinggi pada musim dan harga pasar global.
* Lonjakan besar setelah tahun 2000 diikuti oleh fluktuasi tajam, menandakan potensi pertumbuhan yang besar tetapi juga risiko tinggi dalam stabilitas produksi.
* Tidak terdapat pola pertumbuhan linear, yang memperkuat pentingnya penggunaan model prediktif untuk komoditas ini.

#### Yearly Trend of Cocoa Beans Production (1961–2021)

Cokelat sebagai komoditas ekspor memiliki kontribusi besar terhadap perekonomian beberapa negara ASEAN.
"""

plt.figure(figsize=(12, 6))

cocoa_trend = df_filtered.groupby('Year')['Cocoa beans Production'].sum()
plt.plot(cocoa_trend.index, cocoa_trend.values, color='darkred')

plt.title('Yearly Trend of Cocoa Production (1961–2021)')
plt.xlabel('Year')
plt.ylabel('Cocoa Production (tonnes)')
plt.grid(True)
plt.tight_layout()
plt.show()

"""**Insight:**

* Produksi kakao mengalami pertumbuhan signifikan dari awal 1970-an hingga sekitar tahun 1980, namun disusul oleh penurunan tajam. Setelah tahun 1980, tren produksi cenderung fluktuatif, dengan periode stagnasi panjang hingga akhir 1990-an.
* Kenaikan drastis kembali terjadi antara awal 2000-an hingga puncaknya di sekitar tahun 2008–2009.
* Tren menunjukkan penurunan yang tidak konsisten, dengan beberapa kenaikan sementara namun tidak mencapai puncak sebelumnya.
* Variabilitas tinggi dalam dua dekade terakhir mengindikasikan ketidakstabilan produksi kakao, yang dapat disebabkan oleh faktor eksternal seperti cuaca, hama tanaman, atau dinamika pasar global.

####  Yearly Trend of Palm Oil Production (1961–2021)
"""

plt.figure(figsize=(12, 6))

palm_trend = df_filtered.groupby('Year')['Palm oil Production'].sum()
plt.plot(palm_trend.index, palm_trend.values, color='darkgreen')

plt.title('Yearly Trend of Palm Oil Production (1961–2021)')
plt.xlabel('Year')
plt.ylabel('Palm Oil Production (tonnes)')
plt.grid(True)
plt.tight_layout()
plt.show()

"""**Insight:**

* Produksi minyak kelapa sawit menunjukkan peningkatan pesat pada era 1980–1990 yang kemudian diikuti penurunan tajam sekitar tahun 2000.
* Terdapat fluktuasi besar pasca tahun 2000, termasuk anomali penurunan drastis yang mungkin berkaitan dengan kebijakan ekspor, regulasi, atau faktor lingkungan.
* Kenaikan tajam pada tahun-tahun akhir grafik menunjukkan potensi rebound dalam industri kelapa sawit, meskipun dengan risiko volatilitas tinggi.

## Data Preparation

#### Checking Outliers

Proses ini menggunakan visualisasi boxplot untuk mengidentifikasi outlier pada lima komoditas utama. Boxplot membantu melihat sebaran data, median, kuartil, dan titik-titik ekstrem yang dianggap sebagai outlier berdasarkan rentang interkuartil.
"""

commodities = ['Maize Production', 'Rice Production', 'Coffee green Production',
               'Cocoa beans Production', 'Palm oil Production']

plt.figure(figsize=(12, 6))

for i, commodity in enumerate(commodities):
    plt.subplot(2, 3, i+1)
    sns.boxplot(x=df_filtered[commodity], color='red')
    plt.title(commodity)

plt.tight_layout()
plt.show()

"""**Insight:**

* Seluruh komoditas menunjukkan keberadaan outlier yang cukup banyak di sisi nilai produksi tinggi
* Rice production memiliki outlier paling ekstrem, mencerminkan beberapa tahun atau negara dengan lonjakan produksi besar
* Coffee, cocoa beans, dan palm oil memiliki distribusi yang sangat condong ke kiri dengan banyak nilai ekstrem di atas kuartil ketiga
* Rentang antar kuartil sempit menunjukkan sebagian besar data terpusat di nilai rendah dengan penyebaran terbatas
* Kehadiran outlier perlu diperhatikan dalam proses modeling untuk menghindari bias terhadap nilai ekstrim

#### Handling Outliers

Transformasi logaritmik dilakukan untuk mengatasi distribusi data yang condong dan mengurangi pengaruh nilai ekstrem atau outlier. Metode log1p digunakan agar nilai nol tetap dapat ditransformasikan tanpa error. Transformasi ini bertujuan untuk menstabilkan varians dan meningkatkan performa model yang sensitif terhadap skala data.
"""

df_transformed = df_filtered.copy()

for col in commodities:
    df_transformed[col] = np.log1p(df_transformed[col])

df_transformed

"""**Insight:**

* Distribusi data menjadi lebih normal dan seimbang setelah transformasi
* Outlier yang sebelumnya ekstrem menjadi lebih terkompresi dan tidak terlalu dominan
* Perbedaan skala antar komoditas menjadi lebih seragam, mendukung proses pembelajaran model
* Data hasil transformasi lebih siap untuk digunakan dalam analisis statistik dan modeling prediktif

"""

plt.figure(figsize=(12, 6))

for i, commodity in enumerate(commodities):
    plt.subplot(2, 3, i+1)
    sns.boxplot(x=df_transformed[commodity], color='red')
    plt.title(commodity)

plt.tight_layout()

"""**Insight:**

Memastikan distribusi nilai lebih seimbang dan meminimalkan pengaruh ekstrem terhadap proses analisis dan pemodelan.

* Sebagian besar outlier ekstrem yang sebelumnya muncul telah berhasil ditekan dan distribusi menjadi lebih simetris
* Rentang antar kuartil menjadi lebih luas, menunjukkan penyebaran data yang lebih stabil
* Beberapa outlier kecil masih muncul, terutama pada cocoa beans dan palm oil, namun tidak lagi mendominasi distribusi
* Transformasi berhasil mengurangi skewness, membuat data lebih siap untuk dimodelkan dengan algoritma yang sensitif terhadap skala dan distribusi

#### Data Normalization

Normalisasi data dilakukan untuk menskalakan nilai fitur ke dalam rentang 0 hingga 1 menggunakan metode Min-Max Scaling agar setiap fitur memiliki skala yang seimbang.
"""

df_normalized = df_transformed.copy()

scalers = {}

for col in commodities:
    scaler = MinMaxScaler()
    df_normalized[col] = scaler.fit_transform(df_normalized[[col]])
    scalers[col] = scaler

df_normalized

"""**Insight:**

* Semua komoditas telah berhasil dinormalisasi ke dalam rentang 0 sampai 1
* Nilai minimum dan maksimum dari masing-masing fitur telah disesuaikan berdasarkan distribusi logaritmik sebelumnya
* Perbandingan antar fitur menjadi lebih seragam, memperbaiki performa model yang sensitif terhadap skala data seperti neural network
* Proses ini juga membantu mempercepat konvergensi model saat pelatihan dan mengurangi risiko ketidakseimbangan pembelajaran

#### Data Splitting

Membagi data masing-masing negara dan komoditas ke dalam subset pelatihan (train) dan pengujian (test) berdasarkan proporsi 80 persen untuk pelatihan dan 20 persen untuk pengujian. Data dibagi secara individual untuk setiap kombinasi negara dan komoditas, agar model nantinya dapat belajar dari pola spesifik masing-masing.
"""

target_countries = ['Indonesia', 'Vietnam', 'Thailand', 'Philippines', 'Malaysia']
commodities = ['Maize Production', 'Rice Production', 'Coffee green Production',
               'Cocoa beans Production', 'Palm oil Production']

df_splits = {}

for country in target_countries:
    for commodity in commodities:
        key = f"{country} - {commodity}"

        df_sub = df_normalized[
            df_normalized['Entity'] == country][[
                    'Year', commodity]].dropna().reset_index(drop=True)
        if len(df_sub) > 10:
            split_idx = int(len(df_sub) * 0.8)
            train =df_sub[commodity].iloc[:split_idx].values
            test = df_sub[commodity].iloc[split_idx:].values
            test_years = df_sub['Year'].iloc[split_idx + 5:].values

            df_splits[key] = {
                'train': train,
                'test': test,
                'years_test': test_years,
                'total_years': len(df_sub)
            }

summary = pd.DataFrame([
    {
        'Country – Commodity': key,
        'Train Length': len(val['train']),
        'Test Length': len(val['test']),
        'Total Years': val['total_years']
    }
    for key, val in df_splits.items()
])

summary

"""**Insight:**

* Setiap kombinasi negara dan komoditas memiliki total 61 tahun data, dengan 48 tahun untuk pelatihan dan 13 tahun untuk pengujian
* Struktur data siap digunakan untuk pelatihan model deret waktu seperti LSTM, karena urutan waktu dipertahankan
* Pembagian data yang konsisten memastikan evaluasi model dapat dilakukan secara adil dan seragam antar kombinasi
* Seluruh kombinasi negara dan komoditas memenuhi syarat minimum data dan berhasil dipisahkan tanpa error

#### Data Reshape

Data deret waktu diubah menjadi format sekuensial menggunakan pendekatan sliding window dengan parameter look_back = 5, yang berarti model akan mempelajari lima tahun sebelumnya untuk memprediksi satu tahun berikutnya. Data kemudian direstrukturisasi menjadi bentuk tiga dimensi yang sesuai dengan input model LSTM, yaitu [samples, timesteps, features].
"""

look_back = 5

def create_sequences(series, look_back=5):
    X, y = [], []
    for i in range(len(series) - look_back):
        X.append(series[i:i+look_back])
        y.append(series[i+look_back])
    return np.array(X), np.array(y)

reshaped_data = {}

for key, split in df_splits.items():
    train = split['train']
    test = split['test']

    X_train, y_train = create_sequences(train, look_back)
    X_test, y_test = create_sequences(test, look_back)

    X_train = X_train.reshape((X_train.shape[0], look_back, 1))
    X_test = X_test.reshape((X_test.shape[0], look_back, 1))

    reshaped_data[key] = {
        'X_train': X_train,
        'y_train': y_train,
        'X_test': X_test,
        'y_test': y_test,
        'years_test': split['years_test']
    }

print("Available pairs in reshaped_data:")

for key in reshaped_data.keys():
    print("-", key)

"""**Insight:**

* Setiap kombinasi negara dan komoditas kini memiliki struktur data siap pakai untuk pelatihan model LSTM
* Total 25 pasangan negara-komoditas berhasil diubah menjadi bentuk sekuensial
* Ukuran input model menjadi konsisten, memungkinkan pelatihan dan evaluasi yang efisien
* Transformasi ini mempertahankan hubungan temporal antar tahun, yang sangat penting untuk model prediktif berbasis waktu

#### Data Structure Verification

Memastikan data hasil reshape memiliki dimensi yang sesuai untuk digunakan dalam model LSTM. Setiap sampel pelatihan dan pengujian direpresentasikan sebagai sekuens 5 tahun sebelumnya (look-back) dan target satu tahun ke depan.
"""

key = 'Indonesia - Rice Production'

print(f"Data for {key}:\n")
print("X_train shape:", reshaped_data[key]['X_train'].shape)
print("y_train shape:", reshaped_data[key]['y_train'].shape)
print("X_test shape:", reshaped_data[key]['X_test'].shape)
print("y_test shape:", reshaped_data[key]['y_test'].shape)
print("years_test shape:", reshaped_data[key]['years_test'].shape)

"""**Insight:**

* Untuk kombinasi Indonesia - Rice Production, data pelatihan terdiri dari 43 sampel sekuens dengan 5 langkah waktu dan 1 fitur per langkah
* Data pengujian terdiri dari 8 sampel sekuens, selaras dengan ukuran years_test sebanyak 8 tahun
* Struktur data [samples, timesteps, features] telah berhasil dibentuk dan siap digunakan dalam model LSTM
* Validasi bentuk data penting untuk mencegah error saat pelatihan model dan memastikan data memenuhi kebutuhan input jaringan neural

## Model Development

Untuk setiap pasangan negara–komoditas, dibangun satu model LSTM yang dilatih menggunakan data historis produksi tahunan. Model mempelajari pola dalam 5 tahun terakhir (look_back = 5) untuk memprediksi produksi pada tahun berikutnya.

Model ini dikonfigurasi sebagai berikut:

* **1 lapisan LSTM dengan 50 unit:**
  Lapisan ini digunakan untuk menangkap pola temporal dari data deret waktu tahunan. 50 unit neuron cukup untuk mempelajari variasi tren produksi tanpa overfitting pada dataset per negara.

* **Fungsi aktivasi ReLU:**
  Digunakan karena bekerja efektif pada data numerik dan mempercepat konvergensi model dengan menghindari masalah vanishing gradient.

* **Lapisan output Dense(1):**
  Menghasilkan satu nilai prediksi (produksi tahun ke-n), sesuai dengan sifat regresi univariat.

* **Fungsi kerugian MSE (Mean Squared Error):**
  Mengukur rata-rata kuadrat selisih antara prediksi dan nilai aktual. Cocok digunakan dalam tugas regresi seperti prediksi produksi.

* **Optimizer ADAM:**
  Digunakan karena efisien dan bekerja baik di berbagai jenis data, termasuk data time series seperti produksi tahunan.

* **EarlyStopping:**
  Model dilatih maksimal 100 epoch, namun dapat berhenti lebih awal jika tidak ada perbaikan nilai loss selama 10 epoch berturut-turut (patience=10), dengan toleransi perubahan minimal 0.001.

**Untuk Proses Training:**

* Model dilatih untuk setiap pasangan negara-komoditas yang tersedia dalam reshaped_data.
* Output model berupa:
  * **model terlatih**
  * **prediksi pada data uji (y_pred)**
  * **nilai MSE dan RMSE** sebagai metrik evaluasi

### Train LSTM Model
"""

def train_lstm_model(X_train, y_train, X_test, y_test, look_back=5, epochs=100):
    model = Sequential()
    model.add(LSTM(50, activation='relu', input_shape=(look_back, 1)))
    model.add(Dense(1))
    model.compile(optimizer='adam', loss='mse')

    early_stop = EarlyStopping(
        monitor='loss',
        patience=10,
        restore_best_weights=True,
        mode='min',
        min_delta=0.001,
        verbose=1
    )

    model.fit(
        X_train, y_train,
        epochs=epochs,
        verbose=1,
        callbacks=[early_stop]
    )

    y_pred = model.predict(X_test, verbose=0)
    mse = mean_squared_error(y_test, y_pred)
    rmse = mse ** 0.5

    return model, y_pred, mse, rmse

model_results = {}

for key in reshaped_data.keys():
    print(f"Training for {key}")
    data = reshaped_data[key]
    model, y_pred, mse, rmse = train_lstm_model(
        data['X_train'], data['y_train'],
        data['X_test'], data['y_test'],
        look_back=5, epochs=100
    )
    model_results[key] = {
        'model': model,
        'mse': mse,
        'rmse': rmse,
        'y_pred': y_pred
    }

"""## Evaluation

Setelah model LSTM dilatih untuk setiap pasangan negara–komoditas, langkah selanjutnya adalah mengevaluasi performa model berdasarkan nilai produksi dalam satuan aslinya (ton). Ini dilakukan dengan cara membalik proses normalisasi menggunakan inverse_transform.

Menghitung metrik evaluasi akhir dengan menggunakan:
* MSE (Mean Squared Error): rata-rata kuadrat dari selisih prediksi dan nilai aktual.
* RMSE (Root Mean Squared Error): akar dari MSE, lebih mudah ditafsirkan karena dalam satuan yang sama (ton).

### Evaluation Model and Inverse Transfom
"""

results_summary = []

for key in model_results:
    model = model_results[key]['model']
    data = reshaped_data[key]
    y_pred = model.predict(data['X_test'], verbose=0)
    y_true = data['y_test']

    commodity = key.split(" - ")[-1].strip()
    scaler = scalers[commodity]

    y_pred_inv = scaler.inverse_transform(y_pred)
    y_true_inv = scaler.inverse_transform(y_true.reshape(-1, 1))

    mse = mean_squared_error(y_true_inv, y_pred_inv)
    rmse = mse ** 0.5

    results_summary.append({
        'Country – Commodity': key,
        'MSE': mse,
        'RMSE': rmse
    })

results_df = pd.DataFrame(results_summary)
results_df

"""**Insight:**

* **Akurasi terbaik** ditemukan pada:

  * *Indonesia – Rice Production* (RMSE: **0.1465**): menunjukkan pola produksi yang sangat stabil dan mudah dipelajari oleh model.
  * *Vietnam – Maize Production* (RMSE: **0.1910**) dan *Thailand – Maize Production* (RMSE: **0.1946**): produksi jagung di kedua negara cenderung konsisten dari tahun ke tahun.
  * *Thailand – Palm oil Production* (RMSE: **0.1987**): model mampu mempelajari tren produksi sawit Thailand dengan baik.

* **RMSE tinggi** ditemukan pada:

  * *Malaysia – Cocoa beans Production* (RMSE: **2.7281**): menunjukkan fluktuasi produksi kakao yang tinggi, atau kemungkinan data historis yang tidak konsisten.
  * *Vietnam – Palm oil Production* (RMSE: **2.6232**) dan *Vietnam – Coffee green Production* (RMSE: **2.4844**): kedua komoditas ini sangat fluktuatif di Vietnam, sehingga sulit diprediksi dengan model univariat.
  * *Philippines – Rice Production* (RMSE: **2.6251**): menunjukkan adanya variabilitas tinggi atau lonjakan ekstrem dalam data produksi beras Filipina.

### Forecast Visualization

Visualisasi dilakukan untuk membandingkan prediksi model terhadap data aktual pada periode pelatihan dan pengujian. Data produksi dikembalikan ke skala aslinya menggunakan inverse_transform sebelum divisualisasikan. Setiap grafik menunjukkan tren tahunan produksi komoditas dengan garis prediksi dan aktual untuk masing-masing negara dan komoditas, yang terbagi dalam dua subplot: pelatihan dan pengujian.
"""

scaler_key = key.split(" - ")[-1].strip()
scaler = scalers[scaler_key]

y_pred_inv = scaler.inverse_transform(y_pred)
y_test_inv = scaler.inverse_transform(data['y_test'].reshape(-1, 1))

def plot_forecast_with_years_original(key, model, data_dict, scalers, save=False):
    data = data_dict[key]
    commodity = key.split("-")[-1].strip()
    scaler = scalers[commodity]

    y_train_pred = model.predict(data['X_train'], verbose=0)
    y_test_pred = model.predict(data['X_test'], verbose=0)

    y_train_actual = scaler.inverse_transform(data['y_train'].reshape(-1, 1)).flatten()
    y_train_pred_actual = scaler.inverse_transform(y_train_pred).flatten()

    y_test_actual = scaler.inverse_transform(data['y_test'].reshape(-1, 1)).flatten()
    y_test_pred_actual = scaler.inverse_transform(y_test_pred).flatten()

    years_test = data['years_test'][:len(y_test_actual)]
    start_year = years_test[0] - len(y_train_actual)
    years_train = list(range(start_year, years_test[0]))

    plt.figure(figsize=(14, 5))

    # Training
    plt.subplot(1, 2, 1)
    plt.plot(years_train, y_train_actual, label='Actual Train')
    plt.plot(years_train, y_train_pred_actual, '--', label='Predicted Train')
    plt.title(f'Training – {key}')
    plt.xlabel('Year'); plt.ylabel('Production (tonnes)')
    plt.xticks(rotation=45); plt.legend(); plt.grid(True)

    # Testing
    plt.subplot(1, 2, 2)
    plt.plot(years_test, y_test_actual, label='Actual Test')
    plt.plot(years_test, y_test_pred_actual, '--', label='Predicted Test')
    plt.title(f'Testing – {key}')
    plt.xlabel('Year'); plt.ylabel('Production (tonnes)')
    plt.xticks(rotation=45); plt.legend(); plt.grid(True)

    plt.tight_layout()
    if save:
        safe_key = key.replace(" ", "_").replace(",", "").replace("–", "-")
        plt.savefig(f"{safe_key}.png")
    plt.show()

for key in model_results:
    print(f"Visualizing forecast for {key}")
    plot_forecast_with_years_original(
        key=key,
        model=model_results[key]['model'],
        data_dict=reshaped_data,
        scalers=scalers,
    )

"""### Future Prediction

Model LSTM yang telah dilatih digunakan untuk memprediksi produksi komoditas hingga tahun 2030. Prediksi dilakukan secara bertahap (recursive forecasting) dengan menggunakan output prediksi sebelumnya sebagai input baru. Skala data dikembalikan ke nilai aktual menggunakan inverse transform untuk menghasilkan estimasi produksi dalam satuan ton.

"""

forecast_results = []

look_back = 5
target_year = 2030

for key in model_results:
    model = model_results[key]['model']
    data = reshaped_data[key]
    scaler = scalers[key.split("-")[-1].strip()]
    commodity = key.split("-")[-1].strip()
    country = key.split("-")[0].strip()

    last_sequence = np.concatenate([data['y_train'], data['y_test']])[-look_back:]
    years_last_known = data['years_test'][-1]
    years_to_forecast = target_year - years_last_known

    current_sequence = last_sequence.copy()
    preds_scaled = []

    for _ in range(years_to_forecast):
        input_seq = current_sequence[-look_back:].reshape((1, look_back, 1))
        next_pred = model.predict(input_seq, verbose=0)
        preds_scaled.append(next_pred[0, 0])
        current_sequence = np.append(current_sequence, next_pred[0, 0])

    preds_actual = scaler.inverse_transform(np.array(preds_scaled).reshape(-1, 1)).flatten()

    forecast_results.append({
        'Country': country,
        'Commodity': commodity,
        'Forecast2030': preds_actual[-1],
        'FromYear': years_last_known + 1,
        'ToYear': target_year
    })

forecast_df = pd.DataFrame(forecast_results)
forecast_df.sort_values(by=['Commodity', 'Forecast2030'], ascending=[True, False])

"""**Insight:**

* **Produksi tertinggi tahun 2030 per komoditas:**

  * *Cocoa beans* – Vietnam
  * *Coffee green* – Thailand
  * *Maize* – Indonesia
  * *Palm oil* – Vietnam
  * *Rice* – Indonesia

* **Negara dengan proyeksi tertinggi secara keseluruhan:**

  * *Indonesia*, unggul dalam tiga komoditas utama: *maize*, *rice*, dan *palm oil*.

* **Tren umum:**

  * Negara seperti *Vietnam* dan *Thailand* menunjukkan pertumbuhan pesat pada komoditas spesifik seperti *cocoa beans* dan *coffee green*, menunjukkan potensi spesialisasi dan ekspor.
  * *Malaysia* cenderung menunjukkan angka moderat di hampir semua komoditas, menunjukkan kestabilan produksi namun tidak mendominasi.

* **Kesimpulan:**

  * Proyeksi ini dapat dimanfaatkan untuk pengambilan kebijakan pangan dan pertanian berbasis negara dan komoditas, serta mengidentifikasi peluang ekspor dan investasi.

#### Forecasted Production in 2030

Grafik ini membandingkan hasil prediksi produksi tahun 2030 untuk lima komoditas utama di lima negara ASEAN. Visualisasi menggunakan grafik batang kelompok (grouped bar chart) untuk memperlihatkan performa masing-masing negara dalam setiap komoditas.
"""

sns.set(style="whitegrid")
plt.figure(figsize=(12, 6))

sns.barplot(data=forecast_df, x='Commodity', y='Forecast2030', hue='Country')

plt.title('Forecasted Production in 2030 by Commodity (Indonesia vs Others)')
plt.ylabel('Production (tonnes)')
plt.xlabel('Commodity')
plt.legend(title='Country')
plt.tight_layout()
plt.show()

"""**Insight:**

* Vietnam diproyeksikan mendominasi Cocoa beans Production di tahun 2030, jauh melampaui negara lain
* Indonesia menunjukkan potensi tertinggi dalam Rice dan Maize Production
* Performa negara berbeda-beda tergantung pada komoditas, mencerminkan spesialisasi dan fokus agrikultur masing-masing
* Informasi ini dapat menjadi dasar untuk strategi ketahanan pangan dan perdagangan komoditas di kawasan ASEAN

#### Forecast Comparison (Until 2030)

Melakukan prediksi produksi komoditas hingga tahun 2030 untuk setiap kombinasi negara dan komoditas yang tersedia. Model LSTM yang telah dilatih digunakan untuk menghasilkan prediksi berdasarkan 5 data terakhir dari gabungan data pelatihan dan pengujian. Output prediksi disimpan dalam struktur forecast_by_commodity dan divisualisasikan dalam bentuk grafik per komoditas untuk membandingkan tren antar negara.
"""

def forecast_future(model, last_sequence, n_years, scaler, look_back=5):
    predictions = []
    current_sequence = last_sequence.copy()

    for _ in range(n_years):
        input_seq = current_sequence[-look_back:].reshape((1, look_back, 1))
        next_pred = model.predict(input_seq, verbose=0)
        predictions.append(next_pred[0, 0])
        current_sequence = np.append(current_sequence, next_pred[0, 0])

    predictions = scaler.inverse_transform(np.array(predictions).reshape(-1, 1)).flatten()
    return predictions

forecast_by_commodity = {}

for key in model_results:
    model = model_results[key]['model']
    data = reshaped_data[key]
    scaler = scalers[key.split("-")[-1].strip()]
    commodity = key.split("-")[-1].strip()
    country = key.split("-")[0].strip()

    last_sequence = np.concatenate([data['y_train'], data['y_test']])[-5:]
    years_last_known = data['years_test'][-1]
    years_to_forecast = 2030 - years_last_known
    forecast_years = list(range(years_last_known + 1, 2031))

    preds = forecast_future(model, last_sequence, years_to_forecast, scaler)

    if commodity not in forecast_by_commodity:
        forecast_by_commodity[commodity] = {}

    forecast_by_commodity[commodity][country] = {
        'years': forecast_years,
        'predictions': preds
    }

for commodity, countries_data in forecast_by_commodity.items():
    plt.figure(figsize=(10, 5))
    for country, values in countries_data.items():
        plt.plot(values['years'], values['predictions'], marker='o', label=country)

    plt.title(f'Forecast Comparison (Until 2030) – {commodity}')
    plt.xlabel('Year'); plt.ylabel('Production (tonnes)')
    plt.grid(True); plt.legend(title='Country')
    plt.tight_layout()
    plt.show()

"""**Insight:**

Model LSTM yang telah dilatih digunakan untuk memprediksi produksi komoditas hingga tahun 2030. Prediksi dilakukan secara bertahap (recursive forecasting) dengan menggunakan output prediksi sebelumnya sebagai input baru. Skala data dikembalikan ke nilai aktual menggunakan inverse transform untuk menghasilkan estimasi produksi dalam satuan ton.

- Prediksi produksi hingga tahun 2030 berhasil dilakukan untuk 25 kombinasi negara dan komoditas
- Komoditas Cocoa beans Production di Vietnam diproyeksikan menjadi yang tertinggi pada tahun 2030
- Produksi Maize di Indonesia dan Rice di Indonesia juga menunjukkan angka proyeksi yang tinggi
- Negara-negara ASEAN menunjukkan variasi produksi berdasarkan komoditas unggulan masing-masing
- Hasil ini dapat digunakan untuk perencanaan strategis sektor pertanian di kawasan ASEAN menjelang tahun 2030

## Keterkaitan Hasil Evaluasi dengan Business Understanding

### Apakah model menjawab setiap problem statement?

**Masalah 1:**

> *Tren produksi pertanian di negara-negara ASEAN sangat fluktuatif dan sulit diprediksi tanpa alat yang akurat.*

**Terjawab.**
Model LSTM yang dikembangkan mampu mempelajari pola musiman dan non-linear dalam data historis produksi tahunan dari lima negara ASEAN. Hal ini terbukti dari RMSE yang rendah pada beberapa kombinasi, seperti:

* *Philippines – Maize* (RMSE: 0.0512)
* *Vietnam – Maize* (RMSE: 0.1400)
* *Indonesia – Rice* (RMSE: 0.2178)

Model-model ini menunjukkan bahwa prediksi bisa dilakukan dengan akurasi tinggi pada tren yang stabil. Meski demikian, hasil juga menunjukkan bahwa komoditas seperti kopi atau minyak sawit di beberapa negara memiliki pola yang sulit dipelajari (misalnya *Vietnam – Palm oil*, RMSE: 3.066), yang mengindikasikan kebutuhan pengayaan data di masa depan.

**Masalah 2:**

> *Tidak adanya standar prediksi untuk membandingkan posisi Indonesia dengan negara ASEAN lainnya.*

**Terjawab.**
Model berhasil dibuat untuk **setiap negara dan komoditas**, sehingga memungkinkan:

* Perbandingan RMSE antar negara untuk satu komoditas
* Visualisasi dan pemeringkatan posisi Indonesia dibandingkan Vietnam, Thailand, Filipina, dan Malaysia

Contoh:

* *Indonesia – Rice* memiliki RMSE lebih kecil dibanding *Thailand – Rice* (0.2178 vs. 1.3939), menunjukkan prediksi produksi Indonesia lebih stabil dan dapat diandalkan.
* Hal ini memungkinkan benchmarking kuantitatif antar negara untuk membantu pengambilan keputusan strategis.

**Masalah 3:**

> *Model konvensional tidak mampu menangkap pola non-linier dan musiman pada data pertanian.*

**Terjawab.**
Model LSTM univariat mampu menangkap ketidakteraturan pola yang sulit dideteksi oleh regresi linier atau model statistik sederhana.
Ini terlihat pada keberhasilan model dalam memprediksi tren jangka panjang komoditas seperti jagung di Filipina dan kopi di Indonesia, dengan RMSE rendah.

---

### Apakah model berhasil mencapai goals?

**Tujuan 1:**

Model LSTM berhasil dilatih menggunakan data 1961–2021 dan digunakan untuk memprediksi produksi 2022–2030.

**Tujuan 2:**

Perbandingan antar negara berhasil dilakukan melalui hasil evaluasi numerik (RMSE) dan visualisasi.

**Tujuan 3:**

Model LSTM terbukti mampu mengatasi keterbatasan model tradisional dalam mengenali pola non-linear dan musiman.

---

### Apakah setiap solusi yang direncanakan berdampak?

**Solusi 1:**

Penggunaan LSTM terbukti efektif untuk menangani dataset deret waktu produksi tahunan. Model menunjukkan hasil yang lebih baik pada pola yang konsisten dan mampu beradaptasi pada pola yang fluktuatif.

**Solusi 2:**

Tahapan preprocessing seperti encoding, scaling, reshaping, dan penggunaan look_back terbukti penting dalam menyiapkan data agar model bisa belajar dengan optimal.

**Solusi 3:**

Penggunaan **early stopping** dan **evaluasi dengan RMSE** memberikan hasil yang lebih robust, mencegah overfitting, dan memudahkan interpretasi kesalahan prediksi.

---

### Kesimpulan

Hasil evaluasi mendukung pemanfaatan model LSTM univariat sebagai alat bantu perencanaan pangan jangka panjang.
Proyek ini **berhasil menjawab seluruh problem statement**, **mencapai semua goals yang ditetapkan**, dan **menghasilkan solusi yang berdampak nyata dalam konteks ketahanan pangan dan benchmarking regional ASEAN**.
"""